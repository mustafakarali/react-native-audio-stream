/**
 * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
 *
 * Do not edit this file as changes may cause incorrect behavior and will be lost
 * once the code is regenerated.
 *
 * @generated by codegen project: GenerateModuleH.js
 */

#pragma once

#include <ReactCommon/JavaTurboModule.h>
#include <ReactCommon/TurboModule.h>
#include <jsi/jsi.h>

namespace facebook {
namespace react {

/**
 * C++ class for module 'RNAudioStream'
 */
class JSI_EXPORT NativeAudioStreamSpecJSI : public TurboModule {
protected:
  NativeAudioStreamSpecJSI(std::shared_ptr<CallInvoker> jsInvoker);

public:
  virtual facebook::jsi::Value startStream(
      facebook::jsi::Runtime& rt,
      const facebook::jsi::String& url,
      const facebook::jsi::Object& options) = 0;
  virtual facebook::jsi::Value pauseStream(facebook::jsi::Runtime& rt) = 0;
  virtual facebook::jsi::Value resumeStream(facebook::jsi::Runtime& rt) = 0;
  virtual facebook::jsi::Value stopStream(facebook::jsi::Runtime& rt) = 0;
  virtual facebook::jsi::Value cancelStream(facebook::jsi::Runtime& rt) = 0;
  virtual facebook::jsi::Value seekTo(
      facebook::jsi::Runtime& rt,
      double seconds) = 0;
  virtual facebook::jsi::Value setVolume(
      facebook::jsi::Runtime& rt,
      double volume) = 0;
  virtual void addListener(
      facebook::jsi::Runtime& rt,
      const facebook::jsi::String& eventName) = 0;
  virtual void removeListeners(
      facebook::jsi::Runtime& rt,
      double count) = 0;
};

template <typename T>
class JSI_EXPORT NativeAudioStreamSpec : public TurboModule {
public:
  jsi::Value get(jsi::Runtime& rt, const jsi::PropNameID& name) override {
    return delegate_.get(rt, name);
  }

protected:
  NativeAudioStreamSpec(std::shared_ptr<CallInvoker> jsInvoker)
      : TurboModule("RNAudioStream", jsInvoker), delegate_(static_cast<T*>(this), jsInvoker) {}

private:
  class Delegate : public NativeAudioStreamSpecJSI {
  public:
    Delegate(T* instance, std::shared_ptr<CallInvoker> jsInvoker)
        : NativeAudioStreamSpecJSI(jsInvoker), instance_(instance) {}

    facebook::jsi::Value startStream(
        facebook::jsi::Runtime& rt,
        const facebook::jsi::String& url,
        const facebook::jsi::Object& options) override {
      return instance_->startStream(rt, url, options);
    }

    facebook::jsi::Value pauseStream(facebook::jsi::Runtime& rt) override {
      return instance_->pauseStream(rt);
    }

    facebook::jsi::Value resumeStream(facebook::jsi::Runtime& rt) override {
      return instance_->resumeStream(rt);
    }

    facebook::jsi::Value stopStream(facebook::jsi::Runtime& rt) override {
      return instance_->stopStream(rt);
    }

    facebook::jsi::Value cancelStream(facebook::jsi::Runtime& rt) override {
      return instance_->cancelStream(rt);
    }

    facebook::jsi::Value seekTo(
        facebook::jsi::Runtime& rt,
        double seconds) override {
      return instance_->seekTo(rt, seconds);
    }

    facebook::jsi::Value setVolume(
        facebook::jsi::Runtime& rt,
        double volume) override {
      return instance_->setVolume(rt, volume);
    }

    void addListener(
        facebook::jsi::Runtime& rt,
        const facebook::jsi::String& eventName) override {
      instance_->addListener(rt, eventName);
    }

    void removeListeners(
        facebook::jsi::Runtime& rt,
        double count) override {
      instance_->removeListeners(rt, count);
    }

  private:
    T* instance_;
  };

  Delegate delegate_;
};

} // namespace react
} // namespace facebook 